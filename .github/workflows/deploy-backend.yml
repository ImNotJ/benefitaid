name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package

    - name: Build Docker image
      run: |
        docker build -t imnotj/benefits-backend:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push imnotj/benefits-backend:latest

    - name: Deploy to EC2
      env:
        ROOT_ADMIN_USERNAME: ${{ secrets.ROOT_ADMIN_USERNAME }}
        ROOT_ADMIN_PASSWORD: ${{ secrets.ROOT_ADMIN_PASSWORD }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        echo "Deploying to EC2..."
        ssh -o StrictHostKeyChecking=no -i "~/aws-keys/benefits-backend.pem" ec2-user@ec2-52-71-148-64.compute-1.amazonaws.com << 'EOF'
          docker pull imnotj/benefits-backend:latest
          docker stop benefits-backend || true
          docker rm benefits-backend || true
          docker run -d --name benefits-backend -p 8080:8080 \
            -e ROOT_ADMIN_USERNAME="${{ secrets.ROOT_ADMIN_USERNAME }}" \
            -e ROOT_ADMIN_PASSWORD="${{ secrets.ROOT_ADMIN_PASSWORD }}" \
            -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            imnotj/benefits-backend:latest
        EOF
