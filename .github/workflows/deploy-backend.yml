name: Backend Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Debug - List repository contents
        run: |
          pwd
          ls -la
        working-directory: benefitaid

      # Check for MySQL driver in dependency tree
      - name: Check Dependencies
        run: mvn dependency:tree
        working-directory: benefitaid/benefits-backend

      - name: Build with Maven
        run: mvn clean package
        working-directory: benefitaid/benefits-backend

      - name: Debug - List target directory
        run: ls -la target/
        working-directory: benefitaid/benefits-backend

      - name: Debug - Verify JAR contents
        run: jar tvf target/benefits-backend-0.0.1-SNAPSHOT.jar
        working-directory: benefitaid/benefits-backend

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build --no-cache \
            --build-arg ROOT_ADMIN_USERNAME=${{ secrets.ROOT_ADMIN_USERNAME }} \
            --build-arg ROOT_ADMIN_PASSWORD=${{ secrets.ROOT_ADMIN_PASSWORD }} \
            --build-arg JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --build-arg DB_USERNAME=${{ secrets.DB_USERNAME }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -t imnotj/benefits-backend:latest .
          docker push imnotj/benefits-backend:latest
        working-directory: benefitaid/benefits-backend

      # List Docker images for verification
      - name: Debug - List Docker images
        run: docker images

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ec2-52-71-148-64.compute-1.amazonaws.com
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/ec2-user/deployment
            cd /home/ec2-user/deployment
            docker pull imnotj/benefits-backend:latest
            docker stop benefits-backend || true
            docker rm benefits-backend || true
            docker run -d --name benefits-backend -p 8080:8080 \
              -e ROOT_ADMIN_USERNAME=${{ secrets.ROOT_ADMIN_USERNAME }} \
              -e ROOT_ADMIN_PASSWORD=${{ secrets.ROOT_ADMIN_PASSWORD }} \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              imnotj/benefits-backend:latest

      # Debug environment variables in EC2 container
      - name: Debug Environment Variables
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ec2-52-71-148-64.compute-1.amazonaws.com
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker exec benefits-backend printenv DB_USERNAME
            docker exec benefits-backend printenv DB_PASSWORD

      # Debug Docker containers and logs to verify the backend container status
      - name: Debug - Check running containers
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ec2-52-71-148-64.compute-1.amazonaws.com
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker ps -a
            docker logs benefits-backend