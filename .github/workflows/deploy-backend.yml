name: Deploy Benefits Backend

on:
  push:
    branches:
      - main  # Adjust this to the branch you want to trigger the workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'  # You can use 'adopt', 'temurin', or 'zulu'

    - name: Build project with Maven
      run: |
        cd beneftitaid/benefits-backend  # Change to the correct directory
        mvn clean package

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: |
        cd beneftitaid/benefits-backend  # Ensure you're in the correct directory
        docker build -t imnotj/benefits-backend:latest .

    - name: Push Docker image to Docker Hub
      run: docker push imnotj/benefits-backend:latest

    - name: Set up SSH for EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/benefits-backend.pem
        chmod 600 ~/.ssh/benefits-backend.pem

    - name: SSH into EC2 instance and deploy
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/benefits-backend.pem ec2-user@ec2-52-71-148-64.compute-1.amazonaws.com << 'EOF'
          docker pull imnotj/benefits-backend:latest
          docker stop benefits-backend || true
          docker rm benefits-backend || true
          docker run -d --name benefits-backend -p 8080:8080 \
            -e ROOT_ADMIN_USERNAME=${{ secrets.ROOT_ADMIN_USERNAME }} \
            -e ROOT_ADMIN_PASSWORD=${{ secrets.ROOT_ADMIN_PASSWORD }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            imnotj/benefits-backend:latest
        EOF
